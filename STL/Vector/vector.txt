
                                                          Vector

array is static and vector is dynamic

1.   Insert value
2.   Change a element
3.   Size of a vector
4.   Print all index value of a vector ( for loop)
5.   Input vector size (integer number) and input the vector
6.   Direct initialize a vector with value
7.   Clear a vector (erase all value)
8.   Verify the vector is empty or not
9.   Resize a vector
10.  Set a size of index of a vector on the first beginning
11.  Set the size of index and by default store a value of all index
12.  Vector copy
13.  Use iterator of a for loop
14.  Print vector by (for each loop)
15.  Input one by one index value stop when input 0 
16.  Vector sorting
17.  Sorting a small part of vector
18.  Sorting decreasing order
19.  Sorting decreasing order
20.  Vector reverse
21.  Print the last eliment
22.  Delete last eliment
23.  Print first eliment
24.  Delete first element
25.  Unique vector
26.  Max element
27.  Min element
28.  print index number of max element
29.  Print index number of min element
31.  erase specific index


1.  Insert value

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v;

	v.push_back( 2 );
	v.push_back( 4 );
	v.push_back( 5 );
	v.push_back( 6 );
	
	cout<<v[2]<<endl;
	
}

output: 5




2.  Change a eliment

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v;

	v.push_back( 2 );
	v.push_back( 4 );
	v.push_back( 5 );
	v.push_back( 6 );
	
	v[2] = 10;
	
	cout<<v[2]<<endl;
	
}

output: 10





3. Size of a vector

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v;
	
	v.push_back( 2 );
	v.push_back( 4 );
	v.push_back( 5 );
	v.push_back( 6 );
	
	cout<<v.size()<<endl;
	
}

output: 4




4. Print all index value of a vector ( for loop)

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v;
	
	v.push_back( 2 );
	v.push_back( 4 );
	v.push_back( 5 );
	v.push_back( 6 );
	
	for(int i = 0 ; i < v.size() ; i++){
		cout<<v[i]<<" ";
	}
	cout<<endl;
}

output: 2 4 5 6 



5.  Input vector size (integer number) and
input the vector

#include <bits/stdc++.h>
using namespace std;

int main()
{
	int n;	
	vector<int>v;
	
	cin>>n;
	
	for(int i = 0; i<n; i++){
		int a;
		cin>>a;
		v.push_back(a);
	}
	
	cout<<v.size()<<endl;
	for(int i=0; i<v.size(); i++){
		cout<<v[i]<<" ";
	}
	cout<<endl;
}

input:
5
3 5 7 9 1

output:
5
3 5 7 9 1




6.  Direct initialize a vector with value

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v = {2, 3, 4, 5};
	
	cout<<v.size()<<endl;

	for(int i=0; i<v.size(); i++){
		cout<<v[i]<<" ";
	}
	cout<<endl;
}

output: 
4
2 3 4 5 






7. Clear a vector (erase all value)

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v = {2, 3, 4, 5};
	
	v.clear();
	
	cout<<v.size()<<endl;
	
}

output:
0




8.  Verify the vector is empty or not 

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v = {2, 3, 4, 5};
	
	v.clear();
	
	cout<<v.empty()<<endl;
	
}

output:
1




9.  Resize a vector 

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v = {2, 3, 4, 5};
	
	v.resize(10);
	
	cout<<v.size()<<endl;
	for(int i=0; i<v.size(); i++){
		cout<<v[i]<<" ";
	}
	cout<<endl;
	
}

output:
10
2 3 4 5 0 0 0 0 0 0
10.  Set a size of index of a vector on the first beginning

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v(10);
	
	cout<<v.size()<<endl;
	
	for(int i=0; i<v.size(); i++){
		cout<<v[i]<<" ";
	}
	cout<<endl;
	
}

output:
10
0 0 0 0 0 0 0 0 0 0



11.  Set the size of index and by default store a value of all index

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v(10,6);
	
	for(int i=0; i<v.size(); i++){
		cout<<v[i]<<" ";
	}
	cout<<endl;
	
}

output:
6 6 6 6 6 6 6 6 6 6 




12.  Vector copy

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v = {2, 3, 4, 5};
	vector<int>tmp;
	
	tmp = v;
	
	cout<<tmp.size()<<endl;

	for(int i=0; i<tmp.size(); i++){
		cout<<tmp[i]<<" ";
	}
	cout<<endl;
	
}

output:
4
2 3 4 5 


13.  Use iterator of a for loop 

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v = {2, 3, 4, 5};
	
	vector<int>::iterator it;
	
	for(it = v.begin(); it != v.end(); it++){
		cout<< *it<<" ";
	}
	cout<<endl;
	
}

output:
2 3 4 5 


14.  Print vector by (for each loop)

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int>v = {2, 3, 4, 5};
	
	for( auto u:v ){
		cout<<u<<" ";
	}
	cout<<endl;
	
}

output:
2 3 4 5 
15.  Input one by one index value stop when
input 0 

#include <bits/stdc++.h>
using namespace std;

int main()
{
	int n;
	vector<int> v;
	
	while(1){
		cin>>n;
		if(n == 0){
			break;
		}
		v.push_back(n);
	}
	
	cout<<v.size()<<endl;
	for(auto u:v){
		cout<<u<<" ";
	}
	cout<<endl; 
	
}

input:
5
6
7
2
3
9
0

output:
6
5 6 7 2 3 9



16.  Vector sorting 

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {5, 3, 1, 2,};
	
	sort (v.begin(), v.end());
	
	for(auto u:v){
		cout<<u<<" ";
	}
	cout<<endl; 
	
}
output:
1 2 3 5 
17. Sorting a small part of vector

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {5, 4, 3, 2, 1, 2,};
	
	sort (v.begin()+1, v.begin()+4);
	
	for(auto u:v){
		cout<<u<<" ";
	}
	cout<<endl; 
	
}
output:
5 2 3 4 1 2 



18.  Sorting decreasing order

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {5, 4, 3, 2, 1, 7, 6};
	
	sort (v.begin(), v.end(), greater<int>() );
	
	for(auto u:v){
		cout<<u<<" ";
	}
	cout<<endl; 
	
}

output:
7 6 5 4 3 2 1 

19.  Sorting decreasing order

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {5, 4, 3, 2, 1, 7, 6};
	
	sort (v.rbegin(), v.rend() );
	
	for(auto u:v){
		cout<<u<<" ";
	}
	cout<<endl; 
	
}

output:
7 6 5 4 3 2 1 




20.  Vector reverse

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {5, 3, 1, 7};
	
	reverse (v.begin(), v.end() );
	
	for(auto u:v){
		cout<<u<<" ";
	}
	cout<<endl; 
	
}

output:
7 1 3 5 







21.  Print the last eliment

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {5, 3, 1, 7};
	
	cout<<v.back()<<endl; 
	
}

output:
7
22.  Delete last eliment

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {5, 3, 1, 7};
	
	v.pop_back();
	
	cout<<v.back()<<endl; 
	
}

output:
1




23.  Print first eliment

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {5, 3, 1, 7};
	
	cout<<*v.begin()<<endl; 
	
}

outout:
5




24.  Delete first element

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {5, 3, 1, 7};
	
	v.erase(v.begin());
	
	cout<<*v.begin()<<endl; 
	
}

output:
3
















25.  Unique vector

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {2, 2, 3, 3, 5, 5, 6, 6, 7, 1 };
	
	sort( v.begin(), v.end() );
	
	int size = unique( v.begin(), v.end() ) - v.begin();
	
	cout<<size<<endl;

	for( int i=0; i<size; i++){
		cout<<v[i]<<" ";
	}
	cout<<endl;
	
}

output:
6
1 2 3 5 6 7 



26.  Max element (use iterator)

#include <bits/stdc++.h>
using namespace std;

int main()
{
            vector<int> v = {2, 2, 3, 3, 5, 5, 6, 6, 9, 1 };
	
            vector<int>::iterator it = max_element( v.begin(), v.end() );

            cout<<*it;
	
            cout<<endl;
	
}

output:
9


27.  Min element (use iterator)

#include <bits/stdc++.h>
using namespace std;

int main()
{
             vector<int> v = {2, 2, 3, 3, 5, 5, 6, 6, 9, 1 };
	
             vector<int>::iterator it = min_element( v.begin(), v.end() );
             cout<<*it;
	
             cout<<endl;
	
}

output:
1



26.  Max element

#include <bits/stdc++.h>
using namespace std;

int main()
{
            vector<int> v = {2, 2, 3, 3, 5, 5, 6, 6, 9, 1 };
	
            int a = *max_element( v.begin(), v.end() );

            cout<<a;
	
	
}

output:
9




27.  Min element

#include <bits/stdc++.h>
using namespace std;

int main()
{
             vector<int> v = { 3, 3, 5, 1, 5, 6, 6, 9, };
	
             int a = *min_element( v.begin(), v.end() );
             cout<<a;
	
             cout<<endl;
	
}

output:
1









28.  print index number of max element

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {2, 2, 3, 9, 5, 5, 6, 6, 1};
	
	int n = max_element( v.begin(), v.end() ) - v.begin();
	cout<<n;
	
	cout<<endl;
	
}

output:
3




29.  Print index number of min element

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = {2, 2, 3, 3, 1, 5, 6, 6, 9};
	
	int n = min_element( v.begin(), v.end() ) - v.begin();
	cout<<n;
	
	cout<<endl;
	
}

output:
4



30.

#include <bits/stdc++.h>
using namespace std;

int main()
{
	vector<int> v = { 2, 2, 3, 3, 5, 5, 6, 6, 1, 9 };
	
	vector<int>::iterator it = min_element( v.begin(), v.end() );
	cout<<*it;
	
	cout<<endl;
	
}






31.  erase specific index 

#include <bits/stdc++.h>
using namespace std;

int main(){

	vector<int>vec = {2,5,8,9,12,16};
	
	vec.erase(vec.begin()+3);
	
	for(auto u:vec){
		cout<<u<<" ";
	}
	cout<<endl;
		
}
	
